// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }

import AppSidebar from "@/components/appSidebar";
import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
import { cookies } from "next/headers";
import "./globals.css";
import Image from "next/image";
import { ReduxProvider } from "@/components/reduxProvider";
import { QueryClient } from "@tanstack/react-query";
import { QueryClientProviderComponent } from "@/components/queryClientProvider";
import { ToastContainer } from "react-toastify";

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookieStore = await cookies();
  const defaultOpen = cookieStore.get("sidebar-open")?.value === "true";

  return (
    <html className="dark">
      <body>
        <QueryClientProviderComponent>
          <ReduxProvider>
            <SidebarProvider defaultOpen={defaultOpen}>
              <AppSidebar />
              <main className="h-full w-full">
                <SidebarTrigger className="absolute" />
                <div>{children}</div>
                <ToastContainer />
              </main>
            </SidebarProvider>
          </ReduxProvider>
        </QueryClientProviderComponent>
      </body>
    </html>
  );
}
